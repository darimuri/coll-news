# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'ca5110fd-74cd-480b-b1e3-c42ea644add3'
  imageRepository: 'collnews'
  containerRegistry: 'collnews.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/docker/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Test
  displayName: Test
  jobs:
  - job: Prepare
    displayName: Prepare Test
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: GoTool@0
      inputs:
        version: '1.13.5'
    - task: Go@0
      inputs:
        command: 'get'
        arguments: '-d'
        workingDirectory: '$(System.DefaultWorkingDirectory)'
    - task: Go@0
      inputs:
        command: 'build'
        workingDirectory: '$(System.DefaultWorkingDirectory)'
    - task: CopyFiles@2
      inputs:
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - task: PublishBuildArtifacts@1
      inputs:
        artifactName: drop
  - job: Test
    displayName: Run Test
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Go@0
      env:
        CGO_ENABLED: 0
        TEST_HEADLESS: 1
      inputs:
        command: 'test'
        arguments: '-p 1 -count 1 -timeout 30m ./...'
        workingDirectory: '$(Build.SourcesDirectory)'
    
    
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        buildContext: $(Build.SourcesDirectory)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
